/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
)

// checks if the ItemProductConfigurationStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemProductConfigurationStep{}

// ItemProductConfigurationStep struct for ItemProductConfigurationStep
type ItemProductConfigurationStep struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	Options []ProductConfigurationStepOption `json:"options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ItemProductConfigurationStep ItemProductConfigurationStep

// NewItemProductConfigurationStep instantiates a new ItemProductConfigurationStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemProductConfigurationStep() *ItemProductConfigurationStep {
	this := ItemProductConfigurationStep{}
	return &this
}

// NewItemProductConfigurationStepWithDefaults instantiates a new ItemProductConfigurationStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemProductConfigurationStepWithDefaults() *ItemProductConfigurationStep {
	this := ItemProductConfigurationStep{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ItemProductConfigurationStep) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemProductConfigurationStep) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// &#39;Has&#39;Id returns a boolean if a field has been set.
func (o *ItemProductConfigurationStep) &#39;Has&#39;Id() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ItemProductConfigurationStep) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *ItemProductConfigurationStep) GetGrn() string {
	if o == nil || IsNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemProductConfigurationStep) GetGrnOk() (*string, bool) {
	if o == nil || IsNil(o.Grn) {
		return nil, false
	}
	return o.Grn, true
}

// &#39;Has&#39;Grn returns a boolean if a field has been set.
func (o *ItemProductConfigurationStep) &#39;Has&#39;Grn() bool {
	if o != nil && !IsNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *ItemProductConfigurationStep) SetGrn(v string) {
	o.Grn = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ItemProductConfigurationStep) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemProductConfigurationStep) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// &#39;Has&#39;Label returns a boolean if a field has been set.
func (o *ItemProductConfigurationStep) &#39;Has&#39;Label() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ItemProductConfigurationStep) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ItemProductConfigurationStep) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemProductConfigurationStep) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// &#39;Has&#39;Description returns a boolean if a field has been set.
func (o *ItemProductConfigurationStep) &#39;Has&#39;Description() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ItemProductConfigurationStep) SetDescription(v string) {
	o.Description = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ItemProductConfigurationStep) GetOptions() []ProductConfigurationStepOption {
	if o == nil || IsNil(o.Options) {
		var ret []ProductConfigurationStepOption
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemProductConfigurationStep) GetOptionsOk() ([]ProductConfigurationStepOption, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// &#39;Has&#39;Options returns a boolean if a field has been set.
func (o *ItemProductConfigurationStep) &#39;Has&#39;Options() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductConfigurationStepOption and assigns it to the Options field.
func (o *ItemProductConfigurationStep) SetOptions(v []ProductConfigurationStepOption) {
	o.Options = v
}

func (o ItemProductConfigurationStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemProductConfigurationStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ItemProductConfigurationStep) UnmarshalJSON(data []byte) (err error) {
	varItemProductConfigurationStep := _ItemProductConfigurationStep{}

	err = json.Unmarshal(data, &varItemProductConfigurationStep)

	if err != nil {
		return err
	}

	*o = ItemProductConfigurationStep(varItemProductConfigurationStep)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "grn")
		delete(additionalProperties, "label")
		delete(additionalProperties, "description")
		delete(additionalProperties, "options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *ItemProductConfigurationStep) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *ItemProductConfigurationStep) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableItemProductConfigurationStep struct {
	value *ItemProductConfigurationStep
	isSet bool
}

func (v NullableItemProductConfigurationStep) Get() *ItemProductConfigurationStep {
	return v.value
}

func (v *NullableItemProductConfigurationStep) Set(val *ItemProductConfigurationStep) {
	v.value = val
	v.isSet = true
}

func (v NullableItemProductConfigurationStep) IsSet() bool {
	return v.isSet
}

func (v *NullableItemProductConfigurationStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemProductConfigurationStep(val *ItemProductConfigurationStep) *NullableItemProductConfigurationStep {
	return &NullableItemProductConfigurationStep{value: val, isSet: true}
}

func (v NullableItemProductConfigurationStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemProductConfigurationStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


