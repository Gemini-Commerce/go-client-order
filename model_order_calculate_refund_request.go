/*
order/order.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderCalculateRefundRequest struct for OrderCalculateRefundRequest
type OrderCalculateRefundRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	PaymentId *string `json:"paymentId,omitempty"`
	Items []OrderRefundItem `json:"items,omitempty"`
	// Boolean indicating whether to calculate refund for shipping.
	Shipping *bool `json:"shipping,omitempty"`
}

// NewOrderCalculateRefundRequest instantiates a new OrderCalculateRefundRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCalculateRefundRequest() *OrderCalculateRefundRequest {
	this := OrderCalculateRefundRequest{}
	return &this
}

// NewOrderCalculateRefundRequestWithDefaults instantiates a new OrderCalculateRefundRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCalculateRefundRequestWithDefaults() *OrderCalculateRefundRequest {
	this := OrderCalculateRefundRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *OrderCalculateRefundRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateRefundRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *OrderCalculateRefundRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *OrderCalculateRefundRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *OrderCalculateRefundRequest) GetPaymentId() string {
	if o == nil || isNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateRefundRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil || isNil(o.PaymentId) {
    return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *OrderCalculateRefundRequest) HasPaymentId() bool {
	if o != nil && !isNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *OrderCalculateRefundRequest) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *OrderCalculateRefundRequest) GetItems() []OrderRefundItem {
	if o == nil || isNil(o.Items) {
		var ret []OrderRefundItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateRefundRequest) GetItemsOk() ([]OrderRefundItem, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *OrderCalculateRefundRequest) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []OrderRefundItem and assigns it to the Items field.
func (o *OrderCalculateRefundRequest) SetItems(v []OrderRefundItem) {
	o.Items = v
}

// GetShipping returns the Shipping field value if set, zero value otherwise.
func (o *OrderCalculateRefundRequest) GetShipping() bool {
	if o == nil || isNil(o.Shipping) {
		var ret bool
		return ret
	}
	return *o.Shipping
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCalculateRefundRequest) GetShippingOk() (*bool, bool) {
	if o == nil || isNil(o.Shipping) {
    return nil, false
	}
	return o.Shipping, true
}

// HasShipping returns a boolean if a field has been set.
func (o *OrderCalculateRefundRequest) HasShipping() bool {
	if o != nil && !isNil(o.Shipping) {
		return true
	}

	return false
}

// SetShipping gets a reference to the given bool and assigns it to the Shipping field.
func (o *OrderCalculateRefundRequest) SetShipping(v bool) {
	o.Shipping = &v
}

func (o OrderCalculateRefundRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Shipping) {
		toSerialize["shipping"] = o.Shipping
	}
	return json.Marshal(toSerialize)
}

type NullableOrderCalculateRefundRequest struct {
	value *OrderCalculateRefundRequest
	isSet bool
}

func (v NullableOrderCalculateRefundRequest) Get() *OrderCalculateRefundRequest {
	return v.value
}

func (v *NullableOrderCalculateRefundRequest) Set(val *OrderCalculateRefundRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCalculateRefundRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCalculateRefundRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCalculateRefundRequest(val *OrderCalculateRefundRequest) *NullableOrderCalculateRefundRequest {
	return &NullableOrderCalculateRefundRequest{value: val, isSet: true}
}

func (v NullableOrderCalculateRefundRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCalculateRefundRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


