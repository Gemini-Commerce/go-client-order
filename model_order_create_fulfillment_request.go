/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderCreateFulfillmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreateFulfillmentRequest{}

// OrderCreateFulfillmentRequest struct for OrderCreateFulfillmentRequest
type OrderCreateFulfillmentRequest struct {
	TenantId             string                 `json:"tenantId"`
	OrderId              string                 `json:"orderId"`
	Items                []OrderFulfillmentItem `json:"items"`
	AdditionalProperties map[string]interface{}
}

type _OrderCreateFulfillmentRequest OrderCreateFulfillmentRequest

// NewOrderCreateFulfillmentRequest instantiates a new OrderCreateFulfillmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreateFulfillmentRequest(tenantId string, orderId string, items []OrderFulfillmentItem) *OrderCreateFulfillmentRequest {
	this := OrderCreateFulfillmentRequest{}
	this.TenantId = tenantId
	this.OrderId = orderId
	this.Items = items
	return &this
}

// NewOrderCreateFulfillmentRequestWithDefaults instantiates a new OrderCreateFulfillmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreateFulfillmentRequestWithDefaults() *OrderCreateFulfillmentRequest {
	this := OrderCreateFulfillmentRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *OrderCreateFulfillmentRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *OrderCreateFulfillmentRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *OrderCreateFulfillmentRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetOrderId returns the OrderId field value
func (o *OrderCreateFulfillmentRequest) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *OrderCreateFulfillmentRequest) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *OrderCreateFulfillmentRequest) SetOrderId(v string) {
	o.OrderId = v
}

// GetItems returns the Items field value
func (o *OrderCreateFulfillmentRequest) GetItems() []OrderFulfillmentItem {
	if o == nil {
		var ret []OrderFulfillmentItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *OrderCreateFulfillmentRequest) GetItemsOk() ([]OrderFulfillmentItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *OrderCreateFulfillmentRequest) SetItems(v []OrderFulfillmentItem) {
	o.Items = v
}

func (o OrderCreateFulfillmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreateFulfillmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["orderId"] = o.OrderId
	toSerialize["items"] = o.Items

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderCreateFulfillmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"orderId",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderCreateFulfillmentRequest := _OrderCreateFulfillmentRequest{}

	err = json.Unmarshal(data, &varOrderCreateFulfillmentRequest)

	if err != nil {
		return err
	}

	*o = OrderCreateFulfillmentRequest(varOrderCreateFulfillmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "orderId")
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *OrderCreateFulfillmentRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *OrderCreateFulfillmentRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableOrderCreateFulfillmentRequest struct {
	value *OrderCreateFulfillmentRequest
	isSet bool
}

func (v NullableOrderCreateFulfillmentRequest) Get() *OrderCreateFulfillmentRequest {
	return v.value
}

func (v *NullableOrderCreateFulfillmentRequest) Set(val *OrderCreateFulfillmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreateFulfillmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreateFulfillmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreateFulfillmentRequest(val *OrderCreateFulfillmentRequest) *NullableOrderCreateFulfillmentRequest {
	return &NullableOrderCreateFulfillmentRequest{value: val, isSet: true}
}

func (v NullableOrderCreateFulfillmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreateFulfillmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
