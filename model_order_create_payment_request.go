/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderCreatePaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreatePaymentRequest{}

// OrderCreatePaymentRequest struct for OrderCreatePaymentRequest
type OrderCreatePaymentRequest struct {
	TenantId string `json:"tenantId"`
	OrderId string `json:"orderId"`
	Code string `json:"code"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	Amount OrderMoney `json:"amount"`
	CcInfo *PaymentCcInfo `json:"ccInfo,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderCreatePaymentRequest OrderCreatePaymentRequest

// NewOrderCreatePaymentRequest instantiates a new OrderCreatePaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreatePaymentRequest(tenantId string, orderId string, code string, amount OrderMoney) *OrderCreatePaymentRequest {
	this := OrderCreatePaymentRequest{}
	this.TenantId = tenantId
	this.OrderId = orderId
	this.Code = code
	this.Amount = amount
	return &this
}

// NewOrderCreatePaymentRequestWithDefaults instantiates a new OrderCreatePaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreatePaymentRequestWithDefaults() *OrderCreatePaymentRequest {
	this := OrderCreatePaymentRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *OrderCreatePaymentRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *OrderCreatePaymentRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetOrderId returns the OrderId field value
func (o *OrderCreatePaymentRequest) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *OrderCreatePaymentRequest) SetOrderId(v string) {
	o.OrderId = v
}

// GetCode returns the Code field value
func (o *OrderCreatePaymentRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *OrderCreatePaymentRequest) SetCode(v string) {
	o.Code = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *OrderCreatePaymentRequest) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// &#39;Has&#39;AdditionalInfo returns a boolean if a field has been set.
func (o *OrderCreatePaymentRequest) &#39;Has&#39;AdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *OrderCreatePaymentRequest) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetAmount returns the Amount field value
func (o *OrderCreatePaymentRequest) GetAmount() OrderMoney {
	if o == nil {
		var ret OrderMoney
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetAmountOk() (*OrderMoney, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *OrderCreatePaymentRequest) SetAmount(v OrderMoney) {
	o.Amount = v
}

// GetCcInfo returns the CcInfo field value if set, zero value otherwise.
func (o *OrderCreatePaymentRequest) GetCcInfo() PaymentCcInfo {
	if o == nil || IsNil(o.CcInfo) {
		var ret PaymentCcInfo
		return ret
	}
	return *o.CcInfo
}

// GetCcInfoOk returns a tuple with the CcInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreatePaymentRequest) GetCcInfoOk() (*PaymentCcInfo, bool) {
	if o == nil || IsNil(o.CcInfo) {
		return nil, false
	}
	return o.CcInfo, true
}

// &#39;Has&#39;CcInfo returns a boolean if a field has been set.
func (o *OrderCreatePaymentRequest) &#39;Has&#39;CcInfo() bool {
	if o != nil && !IsNil(o.CcInfo) {
		return true
	}

	return false
}

// SetCcInfo gets a reference to the given PaymentCcInfo and assigns it to the CcInfo field.
func (o *OrderCreatePaymentRequest) SetCcInfo(v PaymentCcInfo) {
	o.CcInfo = &v
}

func (o OrderCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreatePaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["orderId"] = o.OrderId
	toSerialize["code"] = o.Code
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.CcInfo) {
		toSerialize["ccInfo"] = o.CcInfo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderCreatePaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"orderId",
		"code",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderCreatePaymentRequest := _OrderCreatePaymentRequest{}

	err = json.Unmarshal(data, &varOrderCreatePaymentRequest)

	if err != nil {
		return err
	}

	*o = OrderCreatePaymentRequest(varOrderCreatePaymentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "orderId")
		delete(additionalProperties, "code")
		delete(additionalProperties, "additionalInfo")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "ccInfo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *OrderCreatePaymentRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *OrderCreatePaymentRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableOrderCreatePaymentRequest struct {
	value *OrderCreatePaymentRequest
	isSet bool
}

func (v NullableOrderCreatePaymentRequest) Get() *OrderCreatePaymentRequest {
	return v.value
}

func (v *NullableOrderCreatePaymentRequest) Set(val *OrderCreatePaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreatePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreatePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreatePaymentRequest(val *OrderCreatePaymentRequest) *NullableOrderCreatePaymentRequest {
	return &NullableOrderCreatePaymentRequest{value: val, isSet: true}
}

func (v NullableOrderCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreatePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


