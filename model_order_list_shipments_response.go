/*
order/order.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderListShipmentsResponse struct for OrderListShipmentsResponse
type OrderListShipmentsResponse struct {
	Shipments []OrderShipment `json:"shipments,omitempty"`
}

// NewOrderListShipmentsResponse instantiates a new OrderListShipmentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderListShipmentsResponse() *OrderListShipmentsResponse {
	this := OrderListShipmentsResponse{}
	return &this
}

// NewOrderListShipmentsResponseWithDefaults instantiates a new OrderListShipmentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderListShipmentsResponseWithDefaults() *OrderListShipmentsResponse {
	this := OrderListShipmentsResponse{}
	return &this
}

// GetShipments returns the Shipments field value if set, zero value otherwise.
func (o *OrderListShipmentsResponse) GetShipments() []OrderShipment {
	if o == nil || isNil(o.Shipments) {
		var ret []OrderShipment
		return ret
	}
	return o.Shipments
}

// GetShipmentsOk returns a tuple with the Shipments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListShipmentsResponse) GetShipmentsOk() ([]OrderShipment, bool) {
	if o == nil || isNil(o.Shipments) {
    return nil, false
	}
	return o.Shipments, true
}

// HasShipments returns a boolean if a field has been set.
func (o *OrderListShipmentsResponse) HasShipments() bool {
	if o != nil && !isNil(o.Shipments) {
		return true
	}

	return false
}

// SetShipments gets a reference to the given []OrderShipment and assigns it to the Shipments field.
func (o *OrderListShipmentsResponse) SetShipments(v []OrderShipment) {
	o.Shipments = v
}

func (o OrderListShipmentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Shipments) {
		toSerialize["shipments"] = o.Shipments
	}
	return json.Marshal(toSerialize)
}

type NullableOrderListShipmentsResponse struct {
	value *OrderListShipmentsResponse
	isSet bool
}

func (v NullableOrderListShipmentsResponse) Get() *OrderListShipmentsResponse {
	return v.value
}

func (v *NullableOrderListShipmentsResponse) Set(val *OrderListShipmentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderListShipmentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderListShipmentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderListShipmentsResponse(val *OrderListShipmentsResponse) *NullableOrderListShipmentsResponse {
	return &NullableOrderListShipmentsResponse{value: val, isSet: true}
}

func (v NullableOrderListShipmentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderListShipmentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


