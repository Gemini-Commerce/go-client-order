/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
)

// checks if the OrderCreateRefundRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreateRefundRequest{}

// OrderCreateRefundRequest struct for OrderCreateRefundRequest
type OrderCreateRefundRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	PaymentId *string `json:"paymentId,omitempty"`
	Items []OrderRefundItem `json:"items,omitempty"`
	Amounts []OrderRefundAmount `json:"amounts,omitempty"`
	Note *string `json:"note,omitempty"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
}

// NewOrderCreateRefundRequest instantiates a new OrderCreateRefundRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreateRefundRequest() *OrderCreateRefundRequest {
	this := OrderCreateRefundRequest{}
	return &this
}

// NewOrderCreateRefundRequestWithDefaults instantiates a new OrderCreateRefundRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreateRefundRequestWithDefaults() *OrderCreateRefundRequest {
	this := OrderCreateRefundRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *OrderCreateRefundRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *OrderCreateRefundRequest) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetItems() []OrderRefundItem {
	if o == nil || IsNil(o.Items) {
		var ret []OrderRefundItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetItemsOk() ([]OrderRefundItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []OrderRefundItem and assigns it to the Items field.
func (o *OrderCreateRefundRequest) SetItems(v []OrderRefundItem) {
	o.Items = v
}

// GetAmounts returns the Amounts field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetAmounts() []OrderRefundAmount {
	if o == nil || IsNil(o.Amounts) {
		var ret []OrderRefundAmount
		return ret
	}
	return o.Amounts
}

// GetAmountsOk returns a tuple with the Amounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetAmountsOk() ([]OrderRefundAmount, bool) {
	if o == nil || IsNil(o.Amounts) {
		return nil, false
	}
	return o.Amounts, true
}

// HasAmounts returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasAmounts() bool {
	if o != nil && !IsNil(o.Amounts) {
		return true
	}

	return false
}

// SetAmounts gets a reference to the given []OrderRefundAmount and assigns it to the Amounts field.
func (o *OrderCreateRefundRequest) SetAmounts(v []OrderRefundAmount) {
	o.Amounts = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *OrderCreateRefundRequest) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *OrderCreateRefundRequest) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

func (o OrderCreateRefundRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreateRefundRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Amounts) {
		toSerialize["amounts"] = o.Amounts
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

type NullableOrderCreateRefundRequest struct {
	value *OrderCreateRefundRequest
	isSet bool
}

func (v NullableOrderCreateRefundRequest) Get() *OrderCreateRefundRequest {
	return v.value
}

func (v *NullableOrderCreateRefundRequest) Set(val *OrderCreateRefundRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreateRefundRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreateRefundRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreateRefundRequest(val *OrderCreateRefundRequest) *NullableOrderCreateRefundRequest {
	return &NullableOrderCreateRefundRequest{value: val, isSet: true}
}

func (v NullableOrderCreateRefundRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreateRefundRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


