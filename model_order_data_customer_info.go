/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderDataCustomerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDataCustomerInfo{}

// OrderDataCustomerInfo struct for OrderDataCustomerInfo
type OrderDataCustomerInfo struct {
	Grn                  *string `json:"grn,omitempty"`
	Firstname            string  `json:"firstname"`
	Lastname             string  `json:"lastname"`
	Email                string  `json:"email"`
	Phone                *string `json:"phone,omitempty"`
	Segment              *string `json:"segment,omitempty"`
	Data                 *string `json:"data,omitempty"`
	CertifiedEmail       *string `json:"certifiedEmail,omitempty"`
	TaxCode              *string `json:"taxCode,omitempty"`
	SdiCode              *string `json:"sdiCode,omitempty"`
	FiscalCode           *string `json:"fiscalCode,omitempty"`
	CompanyName          *string `json:"companyName,omitempty"`
	AgentGrn             *string `json:"agentGrn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderDataCustomerInfo OrderDataCustomerInfo

// NewOrderDataCustomerInfo instantiates a new OrderDataCustomerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDataCustomerInfo(firstname string, lastname string, email string) *OrderDataCustomerInfo {
	this := OrderDataCustomerInfo{}
	this.Firstname = firstname
	this.Lastname = lastname
	this.Email = email
	return &this
}

// NewOrderDataCustomerInfoWithDefaults instantiates a new OrderDataCustomerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDataCustomerInfoWithDefaults() *OrderDataCustomerInfo {
	this := OrderDataCustomerInfo{}
	return &this
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetGrn() string {
	if o == nil || IsNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetGrnOk() (*string, bool) {
	if o == nil || IsNil(o.Grn) {
		return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasGrn() bool {
	if o != nil && !IsNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *OrderDataCustomerInfo) SetGrn(v string) {
	o.Grn = &v
}

// GetFirstname returns the Firstname field value
func (o *OrderDataCustomerInfo) GetFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstname, true
}

// SetFirstname sets field value
func (o *OrderDataCustomerInfo) SetFirstname(v string) {
	o.Firstname = v
}

// GetLastname returns the Lastname field value
func (o *OrderDataCustomerInfo) GetLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lastname, true
}

// SetLastname sets field value
func (o *OrderDataCustomerInfo) SetLastname(v string) {
	o.Lastname = v
}

// GetEmail returns the Email field value
func (o *OrderDataCustomerInfo) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *OrderDataCustomerInfo) SetEmail(v string) {
	o.Email = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *OrderDataCustomerInfo) SetPhone(v string) {
	o.Phone = &v
}

// GetSegment returns the Segment field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetSegment() string {
	if o == nil || IsNil(o.Segment) {
		var ret string
		return ret
	}
	return *o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetSegmentOk() (*string, bool) {
	if o == nil || IsNil(o.Segment) {
		return nil, false
	}
	return o.Segment, true
}

// HasSegment returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasSegment() bool {
	if o != nil && !IsNil(o.Segment) {
		return true
	}

	return false
}

// SetSegment gets a reference to the given string and assigns it to the Segment field.
func (o *OrderDataCustomerInfo) SetSegment(v string) {
	o.Segment = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *OrderDataCustomerInfo) SetData(v string) {
	o.Data = &v
}

// GetCertifiedEmail returns the CertifiedEmail field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetCertifiedEmail() string {
	if o == nil || IsNil(o.CertifiedEmail) {
		var ret string
		return ret
	}
	return *o.CertifiedEmail
}

// GetCertifiedEmailOk returns a tuple with the CertifiedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetCertifiedEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CertifiedEmail) {
		return nil, false
	}
	return o.CertifiedEmail, true
}

// HasCertifiedEmail returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasCertifiedEmail() bool {
	if o != nil && !IsNil(o.CertifiedEmail) {
		return true
	}

	return false
}

// SetCertifiedEmail gets a reference to the given string and assigns it to the CertifiedEmail field.
func (o *OrderDataCustomerInfo) SetCertifiedEmail(v string) {
	o.CertifiedEmail = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *OrderDataCustomerInfo) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetSdiCode returns the SdiCode field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetSdiCode() string {
	if o == nil || IsNil(o.SdiCode) {
		var ret string
		return ret
	}
	return *o.SdiCode
}

// GetSdiCodeOk returns a tuple with the SdiCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetSdiCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SdiCode) {
		return nil, false
	}
	return o.SdiCode, true
}

// HasSdiCode returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasSdiCode() bool {
	if o != nil && !IsNil(o.SdiCode) {
		return true
	}

	return false
}

// SetSdiCode gets a reference to the given string and assigns it to the SdiCode field.
func (o *OrderDataCustomerInfo) SetSdiCode(v string) {
	o.SdiCode = &v
}

// GetFiscalCode returns the FiscalCode field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetFiscalCode() string {
	if o == nil || IsNil(o.FiscalCode) {
		var ret string
		return ret
	}
	return *o.FiscalCode
}

// GetFiscalCodeOk returns a tuple with the FiscalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetFiscalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalCode) {
		return nil, false
	}
	return o.FiscalCode, true
}

// HasFiscalCode returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasFiscalCode() bool {
	if o != nil && !IsNil(o.FiscalCode) {
		return true
	}

	return false
}

// SetFiscalCode gets a reference to the given string and assigns it to the FiscalCode field.
func (o *OrderDataCustomerInfo) SetFiscalCode(v string) {
	o.FiscalCode = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *OrderDataCustomerInfo) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetAgentGrn returns the AgentGrn field value if set, zero value otherwise.
func (o *OrderDataCustomerInfo) GetAgentGrn() string {
	if o == nil || IsNil(o.AgentGrn) {
		var ret string
		return ret
	}
	return *o.AgentGrn
}

// GetAgentGrnOk returns a tuple with the AgentGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataCustomerInfo) GetAgentGrnOk() (*string, bool) {
	if o == nil || IsNil(o.AgentGrn) {
		return nil, false
	}
	return o.AgentGrn, true
}

// HasAgentGrn returns a boolean if a field has been set.
func (o *OrderDataCustomerInfo) HasAgentGrn() bool {
	if o != nil && !IsNil(o.AgentGrn) {
		return true
	}

	return false
}

// SetAgentGrn gets a reference to the given string and assigns it to the AgentGrn field.
func (o *OrderDataCustomerInfo) SetAgentGrn(v string) {
	o.AgentGrn = &v
}

func (o OrderDataCustomerInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDataCustomerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	toSerialize["firstname"] = o.Firstname
	toSerialize["lastname"] = o.Lastname
	toSerialize["email"] = o.Email
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Segment) {
		toSerialize["segment"] = o.Segment
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.CertifiedEmail) {
		toSerialize["certifiedEmail"] = o.CertifiedEmail
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.SdiCode) {
		toSerialize["sdiCode"] = o.SdiCode
	}
	if !IsNil(o.FiscalCode) {
		toSerialize["fiscalCode"] = o.FiscalCode
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.AgentGrn) {
		toSerialize["agentGrn"] = o.AgentGrn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderDataCustomerInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firstname",
		"lastname",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderDataCustomerInfo := _OrderDataCustomerInfo{}

	err = json.Unmarshal(data, &varOrderDataCustomerInfo)

	if err != nil {
		return err
	}

	*o = OrderDataCustomerInfo(varOrderDataCustomerInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "grn")
		delete(additionalProperties, "firstname")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "email")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "segment")
		delete(additionalProperties, "data")
		delete(additionalProperties, "certifiedEmail")
		delete(additionalProperties, "taxCode")
		delete(additionalProperties, "sdiCode")
		delete(additionalProperties, "fiscalCode")
		delete(additionalProperties, "companyName")
		delete(additionalProperties, "agentGrn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *OrderDataCustomerInfo) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *OrderDataCustomerInfo) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableOrderDataCustomerInfo struct {
	value *OrderDataCustomerInfo
	isSet bool
}

func (v NullableOrderDataCustomerInfo) Get() *OrderDataCustomerInfo {
	return v.value
}

func (v *NullableOrderDataCustomerInfo) Set(val *OrderDataCustomerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDataCustomerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDataCustomerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDataCustomerInfo(val *OrderDataCustomerInfo) *NullableOrderDataCustomerInfo {
	return &NullableOrderDataCustomerInfo{value: val, isSet: true}
}

func (v NullableOrderDataCustomerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDataCustomerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
