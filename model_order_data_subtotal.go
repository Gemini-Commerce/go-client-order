/*
order/order.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderDataSubtotal struct for OrderDataSubtotal
type OrderDataSubtotal struct {
	Code *OrderDataSubtotalCode `json:"code,omitempty"`
	Value *OrderMoney `json:"value,omitempty"`
}

// NewOrderDataSubtotal instantiates a new OrderDataSubtotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDataSubtotal() *OrderDataSubtotal {
	this := OrderDataSubtotal{}
	var code OrderDataSubtotalCode = ORDERDATASUBTOTALCODE_UNKNOWN
	this.Code = &code
	return &this
}

// NewOrderDataSubtotalWithDefaults instantiates a new OrderDataSubtotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDataSubtotalWithDefaults() *OrderDataSubtotal {
	this := OrderDataSubtotal{}
	var code OrderDataSubtotalCode = ORDERDATASUBTOTALCODE_UNKNOWN
	this.Code = &code
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrderDataSubtotal) GetCode() OrderDataSubtotalCode {
	if o == nil || isNil(o.Code) {
		var ret OrderDataSubtotalCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataSubtotal) GetCodeOk() (*OrderDataSubtotalCode, bool) {
	if o == nil || isNil(o.Code) {
    return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrderDataSubtotal) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given OrderDataSubtotalCode and assigns it to the Code field.
func (o *OrderDataSubtotal) SetCode(v OrderDataSubtotalCode) {
	o.Code = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OrderDataSubtotal) GetValue() OrderMoney {
	if o == nil || isNil(o.Value) {
		var ret OrderMoney
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataSubtotal) GetValueOk() (*OrderMoney, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OrderDataSubtotal) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given OrderMoney and assigns it to the Value field.
func (o *OrderDataSubtotal) SetValue(v OrderMoney) {
	o.Value = &v
}

func (o OrderDataSubtotal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableOrderDataSubtotal struct {
	value *OrderDataSubtotal
	isSet bool
}

func (v NullableOrderDataSubtotal) Get() *OrderDataSubtotal {
	return v.value
}

func (v *NullableOrderDataSubtotal) Set(val *OrderDataSubtotal) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDataSubtotal) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDataSubtotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDataSubtotal(val *OrderDataSubtotal) *NullableOrderDataSubtotal {
	return &NullableOrderDataSubtotal{value: val, isSet: true}
}

func (v NullableOrderDataSubtotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDataSubtotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


