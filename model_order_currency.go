/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderCurrency Stands for Albania, not all ;-)
type OrderCurrency string

// List of orderCurrency
const (
	XXX OrderCurrency = "XXX"
	ALL OrderCurrency = "ALL"
	DZD OrderCurrency = "DZD"
	ARS OrderCurrency = "ARS"
	AUD OrderCurrency = "AUD"
	BSD OrderCurrency = "BSD"
	BHD OrderCurrency = "BHD"
	BDT OrderCurrency = "BDT"
	AMD OrderCurrency = "AMD"
	BBD OrderCurrency = "BBD"
	BMD OrderCurrency = "BMD"
	BTN OrderCurrency = "BTN"
	BOB OrderCurrency = "BOB"
	BWP OrderCurrency = "BWP"
	BZD OrderCurrency = "BZD"
	SBD OrderCurrency = "SBD"
	BND OrderCurrency = "BND"
	MMK OrderCurrency = "MMK"
	BIF OrderCurrency = "BIF"
	KHR OrderCurrency = "KHR"
	CAD OrderCurrency = "CAD"
	CVE OrderCurrency = "CVE"
	KYD OrderCurrency = "KYD"
	LKR OrderCurrency = "LKR"
	CLP OrderCurrency = "CLP"
	CNY OrderCurrency = "CNY"
	COP OrderCurrency = "COP"
	KMF OrderCurrency = "KMF"
	CRC OrderCurrency = "CRC"
	HRK OrderCurrency = "HRK"
	CUP OrderCurrency = "CUP"
	CZK OrderCurrency = "CZK"
	DKK OrderCurrency = "DKK"
	DOP OrderCurrency = "DOP"
	SVC OrderCurrency = "SVC"
	ETB OrderCurrency = "ETB"
	ERN OrderCurrency = "ERN"
	FKP OrderCurrency = "FKP"
	FJD OrderCurrency = "FJD"
	DJF OrderCurrency = "DJF"
	GMD OrderCurrency = "GMD"
	GIP OrderCurrency = "GIP"
	GTQ OrderCurrency = "GTQ"
	GNF OrderCurrency = "GNF"
	GYD OrderCurrency = "GYD"
	HTG OrderCurrency = "HTG"
	HNL OrderCurrency = "HNL"
	HKD OrderCurrency = "HKD"
	HUF OrderCurrency = "HUF"
	ISK OrderCurrency = "ISK"
	INR OrderCurrency = "INR"
	IDR OrderCurrency = "IDR"
	IRR OrderCurrency = "IRR"
	IQD OrderCurrency = "IQD"
	ILS OrderCurrency = "ILS"
	JMD OrderCurrency = "JMD"
	JPY OrderCurrency = "JPY"
	KZT OrderCurrency = "KZT"
	JOD OrderCurrency = "JOD"
	KES OrderCurrency = "KES"
	KPW OrderCurrency = "KPW"
	KRW OrderCurrency = "KRW"
	KWD OrderCurrency = "KWD"
	KGS OrderCurrency = "KGS"
	LAK OrderCurrency = "LAK"
	LBP OrderCurrency = "LBP"
	LSL OrderCurrency = "LSL"
	LRD OrderCurrency = "LRD"
	LYD OrderCurrency = "LYD"
	LTL OrderCurrency = "LTL"
	MOP OrderCurrency = "MOP"
	MWK OrderCurrency = "MWK"
	MYR OrderCurrency = "MYR"
	MVR OrderCurrency = "MVR"
	MRO OrderCurrency = "MRO"
	MUR OrderCurrency = "MUR"
	MXN OrderCurrency = "MXN"
	MNT OrderCurrency = "MNT"
	MDL OrderCurrency = "MDL"
	MAD OrderCurrency = "MAD"
	OMR OrderCurrency = "OMR"
	NAD OrderCurrency = "NAD"
	NPR OrderCurrency = "NPR"
	ANG OrderCurrency = "ANG"
	AWG OrderCurrency = "AWG"
	VUV OrderCurrency = "VUV"
	NZD OrderCurrency = "NZD"
	NIO OrderCurrency = "NIO"
	NGN OrderCurrency = "NGN"
	NOK OrderCurrency = "NOK"
	PKR OrderCurrency = "PKR"
	PAB OrderCurrency = "PAB"
	PGK OrderCurrency = "PGK"
	PYG OrderCurrency = "PYG"
	PEN OrderCurrency = "PEN"
	PHP OrderCurrency = "PHP"
	QAR OrderCurrency = "QAR"
	RUB OrderCurrency = "RUB"
	RWF OrderCurrency = "RWF"
	SHP OrderCurrency = "SHP"
	STD OrderCurrency = "STD"
	SAR OrderCurrency = "SAR"
	SCR OrderCurrency = "SCR"
	SLL OrderCurrency = "SLL"
	SGD OrderCurrency = "SGD"
	VND OrderCurrency = "VND"
	SOS OrderCurrency = "SOS"
	ZAR OrderCurrency = "ZAR"
	SSP OrderCurrency = "SSP"
	SZL OrderCurrency = "SZL"
	SEK OrderCurrency = "SEK"
	CHF OrderCurrency = "CHF"
	SYP OrderCurrency = "SYP"
	THB OrderCurrency = "THB"
	TOP OrderCurrency = "TOP"
	TTD OrderCurrency = "TTD"
	AED OrderCurrency = "AED"
	TND OrderCurrency = "TND"
	UGX OrderCurrency = "UGX"
	MKD OrderCurrency = "MKD"
	EGP OrderCurrency = "EGP"
	GBP OrderCurrency = "GBP"
	TZS OrderCurrency = "TZS"
	USD OrderCurrency = "USD"
	UYU OrderCurrency = "UYU"
	UZS OrderCurrency = "UZS"
	WST OrderCurrency = "WST"
	YER OrderCurrency = "YER"
	TWD OrderCurrency = "TWD"
	CUC OrderCurrency = "CUC"
	ZWL OrderCurrency = "ZWL"
	TMT OrderCurrency = "TMT"
	GHS OrderCurrency = "GHS"
	VEF OrderCurrency = "VEF"
	SDG OrderCurrency = "SDG"
	UYI OrderCurrency = "UYI"
	RSD OrderCurrency = "RSD"
	MZN OrderCurrency = "MZN"
	AZN OrderCurrency = "AZN"
	RON OrderCurrency = "RON"
	CHE OrderCurrency = "CHE"
	CHW OrderCurrency = "CHW"
	TRY OrderCurrency = "TRY"
	XAF OrderCurrency = "XAF"
	XCD OrderCurrency = "XCD"
	XOF OrderCurrency = "XOF"
	XPF OrderCurrency = "XPF"
	XBA OrderCurrency = "XBA"
	XBB OrderCurrency = "XBB"
	XBC OrderCurrency = "XBC"
	XBD OrderCurrency = "XBD"
	XAU OrderCurrency = "XAU"
	XDR OrderCurrency = "XDR"
	XAG OrderCurrency = "XAG"
	XPT OrderCurrency = "XPT"
	XPD OrderCurrency = "XPD"
	XUA OrderCurrency = "XUA"
	ZMW OrderCurrency = "ZMW"
	SRD OrderCurrency = "SRD"
	MGA OrderCurrency = "MGA"
	COU OrderCurrency = "COU"
	AFN OrderCurrency = "AFN"
	TJS OrderCurrency = "TJS"
	AOA OrderCurrency = "AOA"
	BYR OrderCurrency = "BYR"
	BGN OrderCurrency = "BGN"
	CDF OrderCurrency = "CDF"
	BAM OrderCurrency = "BAM"
	EUR OrderCurrency = "EUR"
	MXV OrderCurrency = "MXV"
	UAH OrderCurrency = "UAH"
	GEL OrderCurrency = "GEL"
	BOV OrderCurrency = "BOV"
	PLN OrderCurrency = "PLN"
	BRL OrderCurrency = "BRL"
	CLF OrderCurrency = "CLF"
	XSU OrderCurrency = "XSU"
	USN OrderCurrency = "USN"
)

// All allowed values of OrderCurrency enum
var AllowedOrderCurrencyEnumValues = []OrderCurrency{
	"XXX",
	"ALL",
	"DZD",
	"ARS",
	"AUD",
	"BSD",
	"BHD",
	"BDT",
	"AMD",
	"BBD",
	"BMD",
	"BTN",
	"BOB",
	"BWP",
	"BZD",
	"SBD",
	"BND",
	"MMK",
	"BIF",
	"KHR",
	"CAD",
	"CVE",
	"KYD",
	"LKR",
	"CLP",
	"CNY",
	"COP",
	"KMF",
	"CRC",
	"HRK",
	"CUP",
	"CZK",
	"DKK",
	"DOP",
	"SVC",
	"ETB",
	"ERN",
	"FKP",
	"FJD",
	"DJF",
	"GMD",
	"GIP",
	"GTQ",
	"GNF",
	"GYD",
	"HTG",
	"HNL",
	"HKD",
	"HUF",
	"ISK",
	"INR",
	"IDR",
	"IRR",
	"IQD",
	"ILS",
	"JMD",
	"JPY",
	"KZT",
	"JOD",
	"KES",
	"KPW",
	"KRW",
	"KWD",
	"KGS",
	"LAK",
	"LBP",
	"LSL",
	"LRD",
	"LYD",
	"LTL",
	"MOP",
	"MWK",
	"MYR",
	"MVR",
	"MRO",
	"MUR",
	"MXN",
	"MNT",
	"MDL",
	"MAD",
	"OMR",
	"NAD",
	"NPR",
	"ANG",
	"AWG",
	"VUV",
	"NZD",
	"NIO",
	"NGN",
	"NOK",
	"PKR",
	"PAB",
	"PGK",
	"PYG",
	"PEN",
	"PHP",
	"QAR",
	"RUB",
	"RWF",
	"SHP",
	"STD",
	"SAR",
	"SCR",
	"SLL",
	"SGD",
	"VND",
	"SOS",
	"ZAR",
	"SSP",
	"SZL",
	"SEK",
	"CHF",
	"SYP",
	"THB",
	"TOP",
	"TTD",
	"AED",
	"TND",
	"UGX",
	"MKD",
	"EGP",
	"GBP",
	"TZS",
	"USD",
	"UYU",
	"UZS",
	"WST",
	"YER",
	"TWD",
	"CUC",
	"ZWL",
	"TMT",
	"GHS",
	"VEF",
	"SDG",
	"UYI",
	"RSD",
	"MZN",
	"AZN",
	"RON",
	"CHE",
	"CHW",
	"TRY",
	"XAF",
	"XCD",
	"XOF",
	"XPF",
	"XBA",
	"XBB",
	"XBC",
	"XBD",
	"XAU",
	"XDR",
	"XAG",
	"XPT",
	"XPD",
	"XUA",
	"ZMW",
	"SRD",
	"MGA",
	"COU",
	"AFN",
	"TJS",
	"AOA",
	"BYR",
	"BGN",
	"CDF",
	"BAM",
	"EUR",
	"MXV",
	"UAH",
	"GEL",
	"BOV",
	"PLN",
	"BRL",
	"CLF",
	"XSU",
	"USN",
}

func (v *OrderCurrency) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderCurrency(value)
	for _, existing := range AllowedOrderCurrencyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderCurrency", value)
}

// NewOrderCurrencyFromValue returns a pointer to a valid OrderCurrency
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderCurrencyFromValue(v string) (*OrderCurrency, error) {
	ev := OrderCurrency(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderCurrency: valid values are %v", v, AllowedOrderCurrencyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderCurrency) IsValid() bool {
	for _, existing := range AllowedOrderCurrencyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to orderCurrency value
func (v OrderCurrency) Ptr() *OrderCurrency {
	return &v
}

type NullableOrderCurrency struct {
	value *OrderCurrency
	isSet bool
}

func (v NullableOrderCurrency) Get() *OrderCurrency {
	return v.value
}

func (v *NullableOrderCurrency) Set(val *OrderCurrency) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCurrency) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCurrency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCurrency(val *OrderCurrency) *NullableOrderCurrency {
	return &NullableOrderCurrency{value: val, isSet: true}
}

func (v NullableOrderCurrency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCurrency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

