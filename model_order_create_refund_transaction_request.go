/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
)

// checks if the OrderCreateRefundTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreateRefundTransactionRequest{}

// OrderCreateRefundTransactionRequest struct for OrderCreateRefundTransactionRequest
type OrderCreateRefundTransactionRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	RefundId *string `json:"refundId,omitempty"`
	ParentTransactionId *string `json:"parentTransactionId,omitempty"`
	Type *OrderTransactionType `json:"type,omitempty"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
}

// NewOrderCreateRefundTransactionRequest instantiates a new OrderCreateRefundTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreateRefundTransactionRequest() *OrderCreateRefundTransactionRequest {
	this := OrderCreateRefundTransactionRequest{}
	var type_ OrderTransactionType = ORDERTRANSACTIONTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// NewOrderCreateRefundTransactionRequestWithDefaults instantiates a new OrderCreateRefundTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreateRefundTransactionRequestWithDefaults() *OrderCreateRefundTransactionRequest {
	this := OrderCreateRefundTransactionRequest{}
	var type_ OrderTransactionType = ORDERTRANSACTIONTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *OrderCreateRefundTransactionRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundTransactionRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *OrderCreateRefundTransactionRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *OrderCreateRefundTransactionRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetRefundId returns the RefundId field value if set, zero value otherwise.
func (o *OrderCreateRefundTransactionRequest) GetRefundId() string {
	if o == nil || IsNil(o.RefundId) {
		var ret string
		return ret
	}
	return *o.RefundId
}

// GetRefundIdOk returns a tuple with the RefundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundTransactionRequest) GetRefundIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefundId) {
		return nil, false
	}
	return o.RefundId, true
}

// HasRefundId returns a boolean if a field has been set.
func (o *OrderCreateRefundTransactionRequest) HasRefundId() bool {
	if o != nil && !IsNil(o.RefundId) {
		return true
	}

	return false
}

// SetRefundId gets a reference to the given string and assigns it to the RefundId field.
func (o *OrderCreateRefundTransactionRequest) SetRefundId(v string) {
	o.RefundId = &v
}

// GetParentTransactionId returns the ParentTransactionId field value if set, zero value otherwise.
func (o *OrderCreateRefundTransactionRequest) GetParentTransactionId() string {
	if o == nil || IsNil(o.ParentTransactionId) {
		var ret string
		return ret
	}
	return *o.ParentTransactionId
}

// GetParentTransactionIdOk returns a tuple with the ParentTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundTransactionRequest) GetParentTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentTransactionId) {
		return nil, false
	}
	return o.ParentTransactionId, true
}

// HasParentTransactionId returns a boolean if a field has been set.
func (o *OrderCreateRefundTransactionRequest) HasParentTransactionId() bool {
	if o != nil && !IsNil(o.ParentTransactionId) {
		return true
	}

	return false
}

// SetParentTransactionId gets a reference to the given string and assigns it to the ParentTransactionId field.
func (o *OrderCreateRefundTransactionRequest) SetParentTransactionId(v string) {
	o.ParentTransactionId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrderCreateRefundTransactionRequest) GetType() OrderTransactionType {
	if o == nil || IsNil(o.Type) {
		var ret OrderTransactionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundTransactionRequest) GetTypeOk() (*OrderTransactionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrderCreateRefundTransactionRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given OrderTransactionType and assigns it to the Type field.
func (o *OrderCreateRefundTransactionRequest) SetType(v OrderTransactionType) {
	o.Type = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *OrderCreateRefundTransactionRequest) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundTransactionRequest) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *OrderCreateRefundTransactionRequest) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *OrderCreateRefundTransactionRequest) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

func (o OrderCreateRefundTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreateRefundTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.RefundId) {
		toSerialize["refundId"] = o.RefundId
	}
	if !IsNil(o.ParentTransactionId) {
		toSerialize["parentTransactionId"] = o.ParentTransactionId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	return toSerialize, nil
}

type NullableOrderCreateRefundTransactionRequest struct {
	value *OrderCreateRefundTransactionRequest
	isSet bool
}

func (v NullableOrderCreateRefundTransactionRequest) Get() *OrderCreateRefundTransactionRequest {
	return v.value
}

func (v *NullableOrderCreateRefundTransactionRequest) Set(val *OrderCreateRefundTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreateRefundTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreateRefundTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreateRefundTransactionRequest(val *OrderCreateRefundTransactionRequest) *NullableOrderCreateRefundTransactionRequest {
	return &NullableOrderCreateRefundTransactionRequest{value: val, isSet: true}
}

func (v NullableOrderCreateRefundTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreateRefundTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


