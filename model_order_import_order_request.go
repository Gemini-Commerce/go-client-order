/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
	"time"
)

// checks if the OrderImportOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderImportOrderRequest{}

// OrderImportOrderRequest struct for OrderImportOrderRequest
type OrderImportOrderRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Number *string `json:"number,omitempty"`
	Channel *string `json:"channel,omitempty"`
	Market *string `json:"market,omitempty"`
	Locale *string `json:"locale,omitempty"`
	CustomerInfo *OrderDataCustomerInfo `json:"customerInfo,omitempty"`
	ShippingAddress *OrderPostalAddress `json:"shippingAddress,omitempty"`
	BillingAddress *OrderPostalAddress `json:"billingAddress,omitempty"`
	Payments []ImportOrderRequestImportedPayment `json:"payments,omitempty"`
	PaymentsInfo []OrderDataPaymentInfo `json:"paymentsInfo,omitempty"`
	ShipmentsInfo []OrderDataShipmentInfo `json:"shipmentsInfo,omitempty"`
	Items []OrderOrderDataItem `json:"items,omitempty"`
	Subtotals *map[string]OrderDataSubtotal `json:"subtotals,omitempty"`
	Totals *map[string]OrderDataTotal `json:"totals,omitempty"`
	Status *string `json:"status,omitempty"`
	Currency *OrderCurrency `json:"currency,omitempty"`
}

// NewOrderImportOrderRequest instantiates a new OrderImportOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderImportOrderRequest() *OrderImportOrderRequest {
	this := OrderImportOrderRequest{}
	var currency OrderCurrency = ORDERCURRENCY_XXX
	this.Currency = &currency
	return &this
}

// NewOrderImportOrderRequestWithDefaults instantiates a new OrderImportOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderImportOrderRequestWithDefaults() *OrderImportOrderRequest {
	this := OrderImportOrderRequest{}
	var currency OrderCurrency = ORDERCURRENCY_XXX
	this.Currency = &currency
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *OrderImportOrderRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OrderImportOrderRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *OrderImportOrderRequest) SetNumber(v string) {
	o.Number = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *OrderImportOrderRequest) SetChannel(v string) {
	o.Channel = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetMarket() string {
	if o == nil || IsNil(o.Market) {
		var ret string
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetMarketOk() (*string, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given string and assigns it to the Market field.
func (o *OrderImportOrderRequest) SetMarket(v string) {
	o.Market = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *OrderImportOrderRequest) SetLocale(v string) {
	o.Locale = &v
}

// GetCustomerInfo returns the CustomerInfo field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetCustomerInfo() OrderDataCustomerInfo {
	if o == nil || IsNil(o.CustomerInfo) {
		var ret OrderDataCustomerInfo
		return ret
	}
	return *o.CustomerInfo
}

// GetCustomerInfoOk returns a tuple with the CustomerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetCustomerInfoOk() (*OrderDataCustomerInfo, bool) {
	if o == nil || IsNil(o.CustomerInfo) {
		return nil, false
	}
	return o.CustomerInfo, true
}

// HasCustomerInfo returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasCustomerInfo() bool {
	if o != nil && !IsNil(o.CustomerInfo) {
		return true
	}

	return false
}

// SetCustomerInfo gets a reference to the given OrderDataCustomerInfo and assigns it to the CustomerInfo field.
func (o *OrderImportOrderRequest) SetCustomerInfo(v OrderDataCustomerInfo) {
	o.CustomerInfo = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetShippingAddress() OrderPostalAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret OrderPostalAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetShippingAddressOk() (*OrderPostalAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given OrderPostalAddress and assigns it to the ShippingAddress field.
func (o *OrderImportOrderRequest) SetShippingAddress(v OrderPostalAddress) {
	o.ShippingAddress = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetBillingAddress() OrderPostalAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret OrderPostalAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetBillingAddressOk() (*OrderPostalAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given OrderPostalAddress and assigns it to the BillingAddress field.
func (o *OrderImportOrderRequest) SetBillingAddress(v OrderPostalAddress) {
	o.BillingAddress = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetPayments() []ImportOrderRequestImportedPayment {
	if o == nil || IsNil(o.Payments) {
		var ret []ImportOrderRequestImportedPayment
		return ret
	}
	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetPaymentsOk() ([]ImportOrderRequestImportedPayment, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasPayments() bool {
	if o != nil && !IsNil(o.Payments) {
		return true
	}

	return false
}

// SetPayments gets a reference to the given []ImportOrderRequestImportedPayment and assigns it to the Payments field.
func (o *OrderImportOrderRequest) SetPayments(v []ImportOrderRequestImportedPayment) {
	o.Payments = v
}

// GetPaymentsInfo returns the PaymentsInfo field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetPaymentsInfo() []OrderDataPaymentInfo {
	if o == nil || IsNil(o.PaymentsInfo) {
		var ret []OrderDataPaymentInfo
		return ret
	}
	return o.PaymentsInfo
}

// GetPaymentsInfoOk returns a tuple with the PaymentsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetPaymentsInfoOk() ([]OrderDataPaymentInfo, bool) {
	if o == nil || IsNil(o.PaymentsInfo) {
		return nil, false
	}
	return o.PaymentsInfo, true
}

// HasPaymentsInfo returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasPaymentsInfo() bool {
	if o != nil && !IsNil(o.PaymentsInfo) {
		return true
	}

	return false
}

// SetPaymentsInfo gets a reference to the given []OrderDataPaymentInfo and assigns it to the PaymentsInfo field.
func (o *OrderImportOrderRequest) SetPaymentsInfo(v []OrderDataPaymentInfo) {
	o.PaymentsInfo = v
}

// GetShipmentsInfo returns the ShipmentsInfo field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetShipmentsInfo() []OrderDataShipmentInfo {
	if o == nil || IsNil(o.ShipmentsInfo) {
		var ret []OrderDataShipmentInfo
		return ret
	}
	return o.ShipmentsInfo
}

// GetShipmentsInfoOk returns a tuple with the ShipmentsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetShipmentsInfoOk() ([]OrderDataShipmentInfo, bool) {
	if o == nil || IsNil(o.ShipmentsInfo) {
		return nil, false
	}
	return o.ShipmentsInfo, true
}

// HasShipmentsInfo returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasShipmentsInfo() bool {
	if o != nil && !IsNil(o.ShipmentsInfo) {
		return true
	}

	return false
}

// SetShipmentsInfo gets a reference to the given []OrderDataShipmentInfo and assigns it to the ShipmentsInfo field.
func (o *OrderImportOrderRequest) SetShipmentsInfo(v []OrderDataShipmentInfo) {
	o.ShipmentsInfo = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetItems() []OrderOrderDataItem {
	if o == nil || IsNil(o.Items) {
		var ret []OrderOrderDataItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetItemsOk() ([]OrderOrderDataItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []OrderOrderDataItem and assigns it to the Items field.
func (o *OrderImportOrderRequest) SetItems(v []OrderOrderDataItem) {
	o.Items = v
}

// GetSubtotals returns the Subtotals field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetSubtotals() map[string]OrderDataSubtotal {
	if o == nil || IsNil(o.Subtotals) {
		var ret map[string]OrderDataSubtotal
		return ret
	}
	return *o.Subtotals
}

// GetSubtotalsOk returns a tuple with the Subtotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetSubtotalsOk() (*map[string]OrderDataSubtotal, bool) {
	if o == nil || IsNil(o.Subtotals) {
		return nil, false
	}
	return o.Subtotals, true
}

// HasSubtotals returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasSubtotals() bool {
	if o != nil && !IsNil(o.Subtotals) {
		return true
	}

	return false
}

// SetSubtotals gets a reference to the given map[string]OrderDataSubtotal and assigns it to the Subtotals field.
func (o *OrderImportOrderRequest) SetSubtotals(v map[string]OrderDataSubtotal) {
	o.Subtotals = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetTotals() map[string]OrderDataTotal {
	if o == nil || IsNil(o.Totals) {
		var ret map[string]OrderDataTotal
		return ret
	}
	return *o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetTotalsOk() (*map[string]OrderDataTotal, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given map[string]OrderDataTotal and assigns it to the Totals field.
func (o *OrderImportOrderRequest) SetTotals(v map[string]OrderDataTotal) {
	o.Totals = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrderImportOrderRequest) SetStatus(v string) {
	o.Status = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OrderImportOrderRequest) GetCurrency() OrderCurrency {
	if o == nil || IsNil(o.Currency) {
		var ret OrderCurrency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderImportOrderRequest) GetCurrencyOk() (*OrderCurrency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OrderImportOrderRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given OrderCurrency and assigns it to the Currency field.
func (o *OrderImportOrderRequest) SetCurrency(v OrderCurrency) {
	o.Currency = &v
}

func (o OrderImportOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderImportOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.CustomerInfo) {
		toSerialize["customerInfo"] = o.CustomerInfo
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.Payments) {
		toSerialize["payments"] = o.Payments
	}
	if !IsNil(o.PaymentsInfo) {
		toSerialize["paymentsInfo"] = o.PaymentsInfo
	}
	if !IsNil(o.ShipmentsInfo) {
		toSerialize["shipmentsInfo"] = o.ShipmentsInfo
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Subtotals) {
		toSerialize["subtotals"] = o.Subtotals
	}
	if !IsNil(o.Totals) {
		toSerialize["totals"] = o.Totals
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableOrderImportOrderRequest struct {
	value *OrderImportOrderRequest
	isSet bool
}

func (v NullableOrderImportOrderRequest) Get() *OrderImportOrderRequest {
	return v.value
}

func (v *NullableOrderImportOrderRequest) Set(val *OrderImportOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderImportOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderImportOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderImportOrderRequest(val *OrderImportOrderRequest) *NullableOrderImportOrderRequest {
	return &NullableOrderImportOrderRequest{value: val, isSet: true}
}

func (v NullableOrderImportOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderImportOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


