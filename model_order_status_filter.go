/*
order Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package order

import (
	"encoding/json"
)

// checks if the OrderStatusFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusFilter{}

// OrderStatusFilter struct for OrderStatusFilter
type OrderStatusFilter struct {
	Statuses []string `json:"statuses,omitempty"`
	Condition *OrderStatusFilterCondition `json:"condition,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderStatusFilter OrderStatusFilter

// NewOrderStatusFilter instantiates a new OrderStatusFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusFilter() *OrderStatusFilter {
	this := OrderStatusFilter{}
	var condition OrderStatusFilterCondition = ORDERSTATUSFILTERCONDITION_IN
	this.Condition = &condition
	return &this
}

// NewOrderStatusFilterWithDefaults instantiates a new OrderStatusFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusFilterWithDefaults() *OrderStatusFilter {
	this := OrderStatusFilter{}
	var condition OrderStatusFilterCondition = ORDERSTATUSFILTERCONDITION_IN
	this.Condition = &condition
	return &this
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *OrderStatusFilter) GetStatuses() []string {
	if o == nil || IsNil(o.Statuses) {
		var ret []string
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusFilter) GetStatusesOk() ([]string, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// &#39;Has&#39;Statuses returns a boolean if a field has been set.
func (o *OrderStatusFilter) &#39;Has&#39;Statuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []string and assigns it to the Statuses field.
func (o *OrderStatusFilter) SetStatuses(v []string) {
	o.Statuses = v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *OrderStatusFilter) GetCondition() OrderStatusFilterCondition {
	if o == nil || IsNil(o.Condition) {
		var ret OrderStatusFilterCondition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusFilter) GetConditionOk() (*OrderStatusFilterCondition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// &#39;Has&#39;Condition returns a boolean if a field has been set.
func (o *OrderStatusFilter) &#39;Has&#39;Condition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given OrderStatusFilterCondition and assigns it to the Condition field.
func (o *OrderStatusFilter) SetCondition(v OrderStatusFilterCondition) {
	o.Condition = &v
}

func (o OrderStatusFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderStatusFilter) UnmarshalJSON(data []byte) (err error) {
	varOrderStatusFilter := _OrderStatusFilter{}

	err = json.Unmarshal(data, &varOrderStatusFilter)

	if err != nil {
		return err
	}

	*o = OrderStatusFilter(varOrderStatusFilter)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "statuses")
		delete(additionalProperties, "condition")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *OrderStatusFilter) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *OrderStatusFilter) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableOrderStatusFilter struct {
	value *OrderStatusFilter
	isSet bool
}

func (v NullableOrderStatusFilter) Get() *OrderStatusFilter {
	return v.value
}

func (v *NullableOrderStatusFilter) Set(val *OrderStatusFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusFilter(val *OrderStatusFilter) *NullableOrderStatusFilter {
	return &NullableOrderStatusFilter{value: val, isSet: true}
}

func (v NullableOrderStatusFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


