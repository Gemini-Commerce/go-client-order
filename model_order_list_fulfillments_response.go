/*
order/order.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderListFulfillmentsResponse struct for OrderListFulfillmentsResponse
type OrderListFulfillmentsResponse struct {
	Fulfillments []OrderFulfillment `json:"fulfillments,omitempty"`
}

// NewOrderListFulfillmentsResponse instantiates a new OrderListFulfillmentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderListFulfillmentsResponse() *OrderListFulfillmentsResponse {
	this := OrderListFulfillmentsResponse{}
	return &this
}

// NewOrderListFulfillmentsResponseWithDefaults instantiates a new OrderListFulfillmentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderListFulfillmentsResponseWithDefaults() *OrderListFulfillmentsResponse {
	this := OrderListFulfillmentsResponse{}
	return &this
}

// GetFulfillments returns the Fulfillments field value if set, zero value otherwise.
func (o *OrderListFulfillmentsResponse) GetFulfillments() []OrderFulfillment {
	if o == nil || isNil(o.Fulfillments) {
		var ret []OrderFulfillment
		return ret
	}
	return o.Fulfillments
}

// GetFulfillmentsOk returns a tuple with the Fulfillments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListFulfillmentsResponse) GetFulfillmentsOk() ([]OrderFulfillment, bool) {
	if o == nil || isNil(o.Fulfillments) {
    return nil, false
	}
	return o.Fulfillments, true
}

// HasFulfillments returns a boolean if a field has been set.
func (o *OrderListFulfillmentsResponse) HasFulfillments() bool {
	if o != nil && !isNil(o.Fulfillments) {
		return true
	}

	return false
}

// SetFulfillments gets a reference to the given []OrderFulfillment and assigns it to the Fulfillments field.
func (o *OrderListFulfillmentsResponse) SetFulfillments(v []OrderFulfillment) {
	o.Fulfillments = v
}

func (o OrderListFulfillmentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fulfillments) {
		toSerialize["fulfillments"] = o.Fulfillments
	}
	return json.Marshal(toSerialize)
}

type NullableOrderListFulfillmentsResponse struct {
	value *OrderListFulfillmentsResponse
	isSet bool
}

func (v NullableOrderListFulfillmentsResponse) Get() *OrderListFulfillmentsResponse {
	return v.value
}

func (v *NullableOrderListFulfillmentsResponse) Set(val *OrderListFulfillmentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderListFulfillmentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderListFulfillmentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderListFulfillmentsResponse(val *OrderListFulfillmentsResponse) *NullableOrderListFulfillmentsResponse {
	return &NullableOrderListFulfillmentsResponse{value: val, isSet: true}
}

func (v NullableOrderListFulfillmentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderListFulfillmentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


