/*
order/order.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrderListOrdersResponse struct for OrderListOrdersResponse
type OrderListOrdersResponse struct {
	Orders []OrderOrderData `json:"orders,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// NewOrderListOrdersResponse instantiates a new OrderListOrdersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderListOrdersResponse() *OrderListOrdersResponse {
	this := OrderListOrdersResponse{}
	return &this
}

// NewOrderListOrdersResponseWithDefaults instantiates a new OrderListOrdersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderListOrdersResponseWithDefaults() *OrderListOrdersResponse {
	this := OrderListOrdersResponse{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *OrderListOrdersResponse) GetOrders() []OrderOrderData {
	if o == nil || isNil(o.Orders) {
		var ret []OrderOrderData
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListOrdersResponse) GetOrdersOk() ([]OrderOrderData, bool) {
	if o == nil || isNil(o.Orders) {
    return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *OrderListOrdersResponse) HasOrders() bool {
	if o != nil && !isNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []OrderOrderData and assigns it to the Orders field.
func (o *OrderListOrdersResponse) SetOrders(v []OrderOrderData) {
	o.Orders = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *OrderListOrdersResponse) GetNextPageToken() string {
	if o == nil || isNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListOrdersResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextPageToken) {
    return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *OrderListOrdersResponse) HasNextPageToken() bool {
	if o != nil && !isNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *OrderListOrdersResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o OrderListOrdersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !isNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableOrderListOrdersResponse struct {
	value *OrderListOrdersResponse
	isSet bool
}

func (v NullableOrderListOrdersResponse) Get() *OrderListOrdersResponse {
	return v.value
}

func (v *NullableOrderListOrdersResponse) Set(val *OrderListOrdersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderListOrdersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderListOrdersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderListOrdersResponse(val *OrderListOrdersResponse) *NullableOrderListOrdersResponse {
	return &NullableOrderListOrdersResponse{value: val, isSet: true}
}

func (v NullableOrderListOrdersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderListOrdersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


